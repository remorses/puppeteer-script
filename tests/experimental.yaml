



prepare:
  headless:              false
  abort:                 ["media", "image", "websocket", "stylesheet", "font", "manifest"]
  executable:            "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"
  viewport:              [1000, 1000]
  emulate:               Chrome
  args:                  []
  env:                   []
  anti-captcha:
    key:                 1d7f3f41sdsdfgghh1b5ffb7640eda149dd73f8
    callback:            domain.com/anticaptcha


figures:
  - votes:               &vote
      selector:          div.vote
      map:
        content:         vote_number
  - films:               &film
      selector:          div.film:contains(/avanti/)
      containing:        /film/
      map:
        href:            film_link
        text:            film_name
      children:          *vote





execute:
  - go_to:               {{  url }}
  - click:               [div, /avanti/]
  - wait:                0
  - type:                {{ username }}
  - inject:              "./jquery.js"
  - new_page:            "ciao.com"

  - return:
      selector:          div.film:contains(/avanti/)
      containing:        /film/
      map: { href: film_link, text: film_name }
      children:
        selector:        div.vote
        map:
          content:       vote_number
  - return:              *film

























  - return:
    - as:                url
      url:               true
    - as:                container,
      selector:          div.container,
      content:           /name/
      children:
        - as:            vote
          selector:      div.vote
          content:       /vote/
          children:
              - as:      number
                type:    {{ type }}
                content: true
                href:    true
                style:   true
                url:     true
    - selector:          div.container
      return:
        content:         film_type
      children:
        - selector:      div.film
          content:       /film:/
          return:
            href:        film_href
            style:       styling
            content:     film_title


      # returns [{ film_type: "", film_href: "http://sdfsd.dsf", film_title: "title"}, ]

    # .then(({name: [{content, href, class, style, attribute}]}) => new User({name: content}).save())


# - close page:          -1 # close current page, google

  # - export html:       "./artifacts/file.html"
  # - redirect:
  #     requests:
  #       - {  to: google.com, types: [xhr] }
  #       - {  to: google.com, types: [xhr] }
  #     responses:
  #       - { from, types, }
  #     to:              localhost:999
  #     continue:        true
